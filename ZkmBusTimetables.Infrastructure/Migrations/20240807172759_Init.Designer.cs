// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZkmBusTimetables.Infrastructure.Persistance;

#nullable disable

namespace ZkmBusTimetables.Infrastructure.Migrations
{
    [DbContext(typeof(ZkmDbContext))]
    [Migration("20240807172759_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressString")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("String");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("City");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Number");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Street");

                    b.HasKey("Id");

                    b.HasIndex("AddressString");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.BusStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusStopString")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("String");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("City");

                    b.Property<bool>("IsRequest")
                        .HasColumnType("bit")
                        .HasColumnName("IsRequest");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Slug");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.RouteLinePoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modifier")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Modifier");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteLinePoints");
                });

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.BusStop", b =>
                {
                    b.OwnsOne("ZkmBusTimetables.Core.Models.Coordinate", "Coordinate", b1 =>
                        {
                            b1.Property<int>("BusStopId")
                                .HasColumnType("int");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("BusStopId");

                            b1.ToTable("BusStops");

                            b1.WithOwner()
                                .HasForeignKey("BusStopId");
                        });

                    b.Navigation("Coordinate")
                        .IsRequired();
                });

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.Route", b =>
                {
                    b.OwnsMany("ZkmBusTimetables.Core.Models.DepartureTime", "DepartureTimes", b1 =>
                        {
                            b1.Property<Guid>("RouteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Modifier")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ScheduleDay")
                                .HasColumnType("int");

                            b1.Property<TimeOnly>("Time")
                                .HasColumnType("time");

                            b1.HasKey("RouteId", "Id");

                            b1.ToTable("DepartureTime");

                            b1.WithOwner()
                                .HasForeignKey("RouteId");
                        });

                    b.OwnsMany("ZkmBusTimetables.Core.Models.RouteStop", "RouteStops", b1 =>
                        {
                            b1.Property<Guid>("RouteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("BusStopId")
                                .HasColumnType("int");

                            b1.Property<int>("Order")
                                .HasColumnType("int");

                            b1.Property<int>("TravelTimeInMinutes")
                                .HasColumnType("int");

                            b1.HasKey("RouteId", "Id");

                            b1.HasIndex("BusStopId");

                            b1.ToTable("RouteStop");

                            b1.HasOne("ZkmBusTimetables.Core.Models.BusStop", "BusStop")
                                .WithMany()
                                .HasForeignKey("BusStopId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("RouteId");

                            b1.Navigation("BusStop");
                        });

                    b.Navigation("DepartureTimes");

                    b.Navigation("RouteStops");
                });

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.RouteLinePoint", b =>
                {
                    b.HasOne("ZkmBusTimetables.Core.Models.Route", "Route")
                        .WithMany("RouteLinePoints")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ZkmBusTimetables.Core.Models.Coordinate", "Coordinate", b1 =>
                        {
                            b1.Property<Guid>("RouteLinePointId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("RouteLinePointId");

                            b1.ToTable("RouteLinePoints");

                            b1.WithOwner()
                                .HasForeignKey("RouteLinePointId");
                        });

                    b.Navigation("Coordinate")
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ZkmBusTimetables.Core.Models.Route", b =>
                {
                    b.Navigation("RouteLinePoints");
                });
#pragma warning restore 612, 618
        }
    }
}
